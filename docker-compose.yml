services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:latest
    restart: always
  airflow-webserver:
    build:
      context: .
      dockerfile: docker/Dockerfile.airflow
    image: custom_airflow:2.9.1
    env_file: .env
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: aed2e9108e5e161ca37c111e14b1c3f9f4d307f79f2c58ec4993fd37e64c2815
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8080
      BASE_DIR : ${BASE_DIR}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    command: >
      bash -c "
        airflow db upgrade &&
        airflow users create --username admin --password admin --firstname Air --lastname Flow --role Admin --email admin@example.com &&
        airflow webserver
      "

  airflow-scheduler:
    build:
      context: .
      dockerfile: docker/Dockerfile.airflow
    image: custom_airflow:2.9.1
    env_file: .env
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: aed2e9108e5e161ca37c111e14b1c3f9f4d307f79f2c58ec4993fd37e64c2815
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8080
      # Ensure BASE_DIR is set correctly in the environment
      # This assumes you have a .env file with BASE_DIR defined
      BASE_DIR : ${BASE_DIR}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - /var/run/docker.sock:/var/run/docker.sock
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: scheduler

  airflow-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.airflow
    image: custom_airflow:2.9.1
    env_file: .env
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: aed2e9108e5e161ca37c111e14b1c3f9f4d307f79f2c58ec4993fd37e64c2815
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8080
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins  
      - /var/run/docker.sock:/var/run/docker.sock
    command: celery worker

  airflow-init:
    image: apache/airflow:2.9.1
    container_name: airflow-init
    env_file: .env
    entrypoint: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Air --lastname Flow --role Admin --email admin@example.com
      "
    depends_on:
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: aed2e9108e5e161ca37c111e14b1c3f9f4d307f79f2c58ec4993fd37e64c2815
      AIRFLOW__WEBSERVER__BASE_URL: http://localhost:8080
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./src:/opt/airflow/src
      - airflow_data:/opt/airflow
    restart: on-failure

  dataloading:
    build:
      context: .
      dockerfile: docker/Dockerfile.dataloading
    image: mai25_cmlops_rakuten_dataloading
    volumes:
      - ./data:/app/data
      - ./src:/app/src
  preprocessing:
    build:
      context: .
      dockerfile: docker/Dockerfile.preprocessing
    image: mai25_cmlops_rakuten_preprocessing
    volumes:
      - ./data:/app/data
      - ./src:/app/src
  training:
    build:
      context: .
      dockerfile: docker/Dockerfile.train
    image: mai25_cmlops_rakuten_train
    volumes:
      - ./data:/app/data
      - ./src:/app/src
      - ./models:/app/models
      - ./mlruns:/app/mlruns
  evaluation:
    build:
      context: .
      dockerfile: docker/Dockerfile.evaluate
    image: mai25_cmlops_rakuten_evaluate
    volumes:
      - ./data:/app/data
      - ./src:/app/src  
      - ./models:/app/models

  mlflow:
    build:
      context: .
      dockerfile: docker/Dockerfile.mlflow
    image: mai25_cmlops_rakuten_mlflow
    ports:
      - 5000:5000
    volumes:
      - ./mlruns:/app/mlruns
    environment:
      MLFLOW_TRACKING_URI: http://0.0.0.0:5000

## 0.0.0.0 --port 5000
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    image: mai25_cmlops_rakuten_api
    ports:
      - "8000:8000"
    volumes:
      - ./data/processed:/app/data/processed
      - ./models:/app/models
      - ./src:/app/src


volumes:
  postgres-db-volume:
  airflow_data:
  airflow_logs:
  airflow_plugins:
  data:
  models:
  mlruns:
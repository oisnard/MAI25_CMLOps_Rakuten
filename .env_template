# Description: Environment variables for the Rakuten project
# The account must be subscribed to the challenge https://challengedata.ens.fr/participants/challenges/35/
ENSDATA_LOGIN=
ENSDATA_PASSWORD=

# The path to the directory where the data is stored
DATA_RAW_DIR="./data/raw"
# The path to the directory where the the images of train dataset are stored
DATA_RAW_IMAGES_TRAIN_DIR="./data/raw/image_train"
# The path to the directory where the the images of test dataset are stored
DATA_RAW_IMAGES_TEST_DIR="./data/raw/image_test"

# The path to the directory where the raw data will be segmented into streams and stored 
# This directory will contain multiple datastreams, each representing a portion of the data
# The datastreams will be used for training, evaluation, and testing purposes. This is to emulate a real-world scenario where data is split into several parts
# The datastreams will be created based on the baseline_ratio defined in params.yaml
DATA_RAW_STREAM_DIR="./data/stream/raw"
DATA_PROCESSED_STREAM_DIR="./data/stream/processed"

# The path to the directory where the processed data will be stored
DATA_PROCESSED_DIR="./data/processed"

# The path to the directory where the processed data will be stored for monitoring
DATA_MONITORING_SAMPLE_DIR="./data/monitoring_sample"

# The path to the directory where assets and are needed for streamlit app
DATA_VIZ_DIR="./data/dataviz"

# The path to the directory where the model will be stored
MODEL_DIR="./models"
# The path to the directory where the logs will be stored
LOGS_DIR="./logs"
# The path to the directory where the scores of model evaluation will be stored
METRICS_DIR="./metrics"

# Definition of the secret key for signing JWT tokens
# This key should be kept secret and not shared publicly
# It is used to ensure the integrity and authenticity of the JWT tokens
# It is recommended to use a strong, random key for production environments
JWT_SECRET_KEY= # peut être généré avec : openssl rand -hex 32
# Definition of the secret key for encrypting sensitive data
# This key should be kept secret and not shared publicly
# It is used to encrypt and decrypt sensitive information to ensure data security
# It is recommended to use a strong, random key for production environments
FERNET_KEY= # peut être généré avec : python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
BASE_DIR= # The base directory for the project

USE_GPU=false
# Set to true if you want to use GPU for training and inference, otherwise set to false
# If GPU is available, then set Dockerfile.train_gpu
DOCKERFILE_TRAIN=docker/Dockerfile.train
# The Dockerfile to use for training the model
# If GPU is available, then set Dockerfile.evaluate_gpu
DOCKERFILE_EVALUATE=docker/Dockerfile.evaluate
# The Dockerfile to use for launching API rest with the model
# If GPU is available, then set Dockerfile.api_gpu
DOCKERFILE_API=docker/Dockerfile.api


DOCKERFILE_FEATURES=docker/Dockerfile.features

#clé secrète pour sécuriser les sessions web d'Airflow 
AIRFLOW__WEBSERVER__SECRET_KEY=  # peut être généré avec : openssl rand -base64 32
AIRFLOW_DB_PASS= # mot de passe pour la base de données d'Airflow